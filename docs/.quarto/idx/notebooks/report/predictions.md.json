{"title":"Predictions","markdown":{"headingText":"Predictions","containsRefs":false,"markdown":"\nThis chapter describes the process used to train the final models on the complete training dataset and generate predictions for the unlabeled test dataset (`LC_test`). This workflow leverages the best model configurations identified during the cross-validation and evaluation phases (detailed in `evaluation.md`).\n\nThe process is managed by two primary R scripts:\n\n1.  [`scripts/train_final_model.R`](https://github.com/adabwana/sp25-m7560-final-project/blob/master/scripts/train_final_model.R): Trains the chosen best model on the *entire* `LC_train` dataset (Fall 2016-Spring 2017) using the optimal hyperparameters found previously, and saves the final fitted model object.\n2.  [`scripts/predict_on_test.R`](https://github.com/adabwana/sp25-m7560-final-project/blob/master/scripts/predict_on_test.R): Loads the final trained model, loads the `LC_test` dataset (Fall 2017-Spring 2018), applies the model to generate predictions, performs any necessary post-processing, and saves the predictions.\n\n## Final Model Training (`train_final_model.R`)\n\nThis script ensures the final production model utilizes all available labeled data for maximum performance.\n\n1.  **Identify Best Configuration**: The script first searches the model artifacts directory (`artifacts/models/r/`) to find the files corresponding to the best performing model for the specified `TARGET_VARIABLE` (e.g., \"Occupancy\") based on the primary tuning metric (`TUNING_METRIC`, e.g., \"rmse\"). It extracts the model type (e.g., \"XGBoost\") and loads the best hyperparameter set (`_best_params.rds`).\n\n    ```r\n    # Conceptual logic from train_final_model.R\n    best_model_files <- find_best_model_files(TARGET_VARIABLE, TUNING_METRIC)\n    best_params <- readRDS(best_model_files$params_file)\n    model_type <- best_model_files$model_type\n    ```\n\n2.  **Load Full Training Data**: It loads the complete `train_engineered.csv` dataset.\n\n    ```r\n    # Conceptual logic from train_final_model.R\n    full_data <- load_data(DATA_FILENAME) # Loads LC_train\n    ```\n\n3.  **Rebuild Workflow**: The script rebuilds the `tidymodels` workflow:\n    *   Creates the preprocessing `recipe` using the full training data (`create_recipe` from `src/r/recipes/recipes.R`).\n    *   Gets the appropriate `parsnip` model specification for the best `model_type` (e.g., `xgb_spec` from `src/r/models/models.R`).\n    *   Combines the recipe and model spec into a `workflow` object.\n    *   Finalizes the workflow using the loaded `best_params`.\n\n    ```r\n    # Conceptual logic from train_final_model.R\n    recipe_obj <- create_recipe(full_data, TARGET_VARIABLE, FEATURES_TO_DROP)\n    model_spec <- model_list_to_use[[model_type]]$spec # Get spec based on type\n    workflow_obj <- build_workflow(recipe_obj, model_spec)\n    final_workflow <- finalize_workflow(workflow_obj, best_params)\n    ```\n\n4.  **Fit Final Model**: The finalized workflow is trained (`fit()`) using the entire `full_data`.\n\n    ```r\n    # Conceptual logic from train_final_model.R\n    final_fit <- fit(final_workflow, data = full_data)\n    ```\n\n5.  **Save Model**: The final fitted workflow object (`final_fit`) is saved to the artifacts directory with a timestamp and model type identifier. A copy is also saved with a `_latest.rds` suffix for easy access by the prediction script.\n\n    ```r\n    # Conceptual logic from train_final_model.R\n    final_model_path <- file.path(MODEL_DIR, final_model_filename)\n    saveRDS(final_fit, final_model_path)\n    # ... code to create/update _latest.rds symlink/copy ...\n    ```\n\n## Prediction Generation (`predict_on_test.R`)\n\nThis script handles the application of the trained model to new, unlabeled data.\n\n1.  **Load Final Model**: It locates and loads the appropriate final fitted model object (preferring the `_latest.rds` version) for the specified `TARGET_PREDICTION`.\n\n    ```r\n    # Conceptual logic from predict_on_test.R\n    # ... logic to find model_path for _latest.rds or timestamped .rds ...\n    best_model_object <- readRDS(model_path)\n    ```\n\n2.  **Load Test Data**: The script loads the `test_engineered.csv` dataset, which contains the features for the prediction period (Fall 2017-Spring 2018) but no target variable values.\n\n    ```r\n    # Conceptual logic from predict_on_test.R\n    test_data <- readr::read_csv(TEST_DATA_PATH, show_col_types = FALSE)\n    ```\n\n3.  **Generate Predictions**: The `predict()` function is called on the loaded model object with the `test_data`. The `tidymodels` workflow automatically applies the same preprocessing steps (defined in the recipe embedded within the fitted workflow) to the test data before feeding it to the underlying model engine (e.g., XGBoost).\n\n    ```r\n    # Conceptual logic from predict_on_test.R\n    # Assumes make_predictions uses predict() internally\n    predictions_df <- predict(best_model_object, new_data = test_data)\n    # Renames default .pred column if needed by make_predictions\n    ```\n\n4.  **Post-process Predictions**: Task-specific adjustments are made. For `Occupancy` predictions, values are rounded to the nearest integer and floored at a minimum of 1 (since occupancy cannot be less than 1).\n\n    ```r\n    # Conceptual logic from predict_on_test.R\n    if (TARGET_PREDICTION == \"Occupancy\") {\n      predictions_df <- predictions_df %>%\n        mutate(\n          .pred = round(.pred),\n          .pred = pmax(1, .pred) # Ensure minimum of 1\n        )\n    }\n    ```\n\n5.  **Save Predictions**: The resulting predictions are saved to a CSV file in the `data/predictions/` directory, named convention includes the target variable, model type, and timestamp.\n\n    ```r\n    # Conceptual logic from predict_on_test.R\n    output_df <- predictions_df %>%\n      mutate(.pred = round(.pred, digits = 4))\n    # ... logic to generate output_path ...\n    readr::write_csv(output_df, output_path)\n    ```\n\nThis R-based pipeline ensures that the final model is trained optimally on all available labeled data and that predictions are generated consistently using the same preprocessing steps learned during training.\n","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"number-sections":false,"output-file":"predictions.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.43","theme":"united"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html","revealjs"]}